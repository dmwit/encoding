{- This file has been auto-generated. Do not edit it. -}
{-# LANGUAGE MagicHash,DeriveDataTypeable #-}
{- |

0	 = &#0; (0)

1	 = &#1; (1)

2	 = &#2; (2)

3	 = &#3; (3)

4	 = &#4; (4)

5	 = &#5; (5)

6	 = &#6; (6)

7	 = &#7; (7)

8	 = &#8; (8)

9	 = &#9; (9)

10	 = &#10; (10)

11	 = &#11; (11)

12	 = &#12; (12)

13	 = &#13; (13)

14	 = &#14; (14)

15	 = &#15; (15)

16	 = &#16; (16)

17	 = &#17; (17)

18	 = &#18; (18)

19	 = &#19; (19)

20	 = &#20; (20)

21	 = &#21; (21)

22	 = &#22; (22)

23	 = &#23; (23)

24	 = &#24; (24)

25	 = &#25; (25)

26	 = &#26; (26)

27	 = &#27; (27)

28	 = &#28; (28)

29	 = &#29; (29)

30	 = &#30; (30)

31	 = &#31; (31)

32	 = &#32; (32)

33	 = &#33; (33)

34	 = &#34; (34)

35	 = &#35; (35)

36	 = &#36; (36)

37	 = &#37; (37)

38	 = &#38; (38)

39	 = &#39; (39)

40	 = &#40; (40)

41	 = &#41; (41)

42	 = &#42; (42)

43	 = &#43; (43)

44	 = &#44; (44)

45	 = &#45; (45)

46	 = &#46; (46)

47	 = &#47; (47)

48	 = &#48; (48)

49	 = &#49; (49)

50	 = &#50; (50)

51	 = &#51; (51)

52	 = &#52; (52)

53	 = &#53; (53)

54	 = &#54; (54)

55	 = &#55; (55)

56	 = &#56; (56)

57	 = &#57; (57)

58	 = &#58; (58)

59	 = &#59; (59)

60	 = &#60; (60)

61	 = &#61; (61)

62	 = &#62; (62)

63	 = &#63; (63)

64	 = &#64; (64)

65	 = &#65; (65)

66	 = &#66; (66)

67	 = &#67; (67)

68	 = &#68; (68)

69	 = &#69; (69)

70	 = &#70; (70)

71	 = &#71; (71)

72	 = &#72; (72)

73	 = &#73; (73)

74	 = &#74; (74)

75	 = &#75; (75)

76	 = &#76; (76)

77	 = &#77; (77)

78	 = &#78; (78)

79	 = &#79; (79)

80	 = &#80; (80)

81	 = &#81; (81)

82	 = &#82; (82)

83	 = &#83; (83)

84	 = &#84; (84)

85	 = &#85; (85)

86	 = &#86; (86)

87	 = &#87; (87)

88	 = &#88; (88)

89	 = &#89; (89)

90	 = &#90; (90)

91	 = &#91; (91)

92	 = &#92; (92)

93	 = &#93; (93)

94	 = &#94; (94)

95	 = &#95; (95)

96	 = &#96; (96)

97	 = &#97; (97)

98	 = &#98; (98)

99	 = &#99; (99)

100	 = &#100; (100)

101	 = &#101; (101)

102	 = &#102; (102)

103	 = &#103; (103)

104	 = &#104; (104)

105	 = &#105; (105)

106	 = &#106; (106)

107	 = &#107; (107)

108	 = &#108; (108)

109	 = &#109; (109)

110	 = &#110; (110)

111	 = &#111; (111)

112	 = &#112; (112)

113	 = &#113; (113)

114	 = &#114; (114)

115	 = &#115; (115)

116	 = &#116; (116)

117	 = &#117; (117)

118	 = &#118; (118)

119	 = &#119; (119)

120	 = &#120; (120)

121	 = &#121; (121)

122	 = &#122; (122)

123	 = &#123; (123)

124	 = &#124; (124)

125	 = &#125; (125)

126	 = &#126; (126)

127	 = &#127; (127)

128	 = &#913; (913)

129	 = &#914; (914)

130	 = &#915; (915)

131	 = &#916; (916)

132	 = &#917; (917)

133	 = &#918; (918)

134	 = &#919; (919)

135	 = &#920; (920)

136	 = &#921; (921)

137	 = &#922; (922)

138	 = &#923; (923)

139	 = &#924; (924)

140	 = &#925; (925)

141	 = &#926; (926)

142	 = &#927; (927)

143	 = &#928; (928)

144	 = &#929; (929)

145	 = &#931; (931)

146	 = &#932; (932)

147	 = &#933; (933)

148	 = &#934; (934)

149	 = &#935; (935)

150	 = &#936; (936)

151	 = &#937; (937)

152	 = &#945; (945)

153	 = &#946; (946)

154	 = &#947; (947)

155	 = &#948; (948)

156	 = &#949; (949)

157	 = &#950; (950)

158	 = &#951; (951)

159	 = &#952; (952)

160	 = &#953; (953)

161	 = &#954; (954)

162	 = &#955; (955)

163	 = &#956; (956)

164	 = &#957; (957)

165	 = &#958; (958)

166	 = &#959; (959)

167	 = &#960; (960)

168	 = &#961; (961)

169	 = &#963; (963)

170	 = &#962; (962)

171	 = &#964; (964)

172	 = &#965; (965)

173	 = &#966; (966)

174	 = &#967; (967)

175	 = &#968; (968)

176	 = &#9617; (9617)

177	 = &#9618; (9618)

178	 = &#9619; (9619)

179	 = &#9474; (9474)

180	 = &#9508; (9508)

181	 = &#9569; (9569)

182	 = &#9570; (9570)

183	 = &#9558; (9558)

184	 = &#9557; (9557)

185	 = &#9571; (9571)

186	 = &#9553; (9553)

187	 = &#9559; (9559)

188	 = &#9565; (9565)

189	 = &#9564; (9564)

190	 = &#9563; (9563)

191	 = &#9488; (9488)

192	 = &#9492; (9492)

193	 = &#9524; (9524)

194	 = &#9516; (9516)

195	 = &#9500; (9500)

196	 = &#9472; (9472)

197	 = &#9532; (9532)

198	 = &#9566; (9566)

199	 = &#9567; (9567)

200	 = &#9562; (9562)

201	 = &#9556; (9556)

202	 = &#9577; (9577)

203	 = &#9574; (9574)

204	 = &#9568; (9568)

205	 = &#9552; (9552)

206	 = &#9580; (9580)

207	 = &#9575; (9575)

208	 = &#9576; (9576)

209	 = &#9572; (9572)

210	 = &#9573; (9573)

211	 = &#9561; (9561)

212	 = &#9560; (9560)

213	 = &#9554; (9554)

214	 = &#9555; (9555)

215	 = &#9579; (9579)

216	 = &#9578; (9578)

217	 = &#9496; (9496)

218	 = &#9484; (9484)

219	 = &#9608; (9608)

220	 = &#9604; (9604)

221	 = &#9612; (9612)

222	 = &#9616; (9616)

223	 = &#9600; (9600)

224	 = &#969; (969)

225	 = &#940; (940)

226	 = &#941; (941)

227	 = &#942; (942)

228	 = &#970; (970)

229	 = &#943; (943)

230	 = &#972; (972)

231	 = &#973; (973)

232	 = &#971; (971)

233	 = &#974; (974)

234	 = &#902; (902)

235	 = &#904; (904)

236	 = &#905; (905)

237	 = &#906; (906)

238	 = &#908; (908)

239	 = &#910; (910)

240	 = &#911; (911)

241	 = &#177; (177)

242	 = &#8805; (8805)

243	 = &#8804; (8804)

244	 = &#938; (938)

245	 = &#939; (939)

246	 = &#247; (247)

247	 = &#8776; (8776)

248	 = &#176; (176)

249	 = &#8729; (8729)

250	 = &#183; (183)

251	 = &#8730; (8730)

252	 = &#8319; (8319)

253	 = &#178; (178)

254	 = &#9632; (9632)

255	 = &#160; (160)
 -}
module Data.Encoding.CP737(CP737(..)) where

import Data.Encoding.Base
import Data.Encoding.ByteSource
import Data.Encoding.ByteSink
import Data.Encoding.Exception
import Data.CharMap
import Data.Array.Static
import Data.Map.Static
import Control.Throws
import Prelude hiding (lookup)
import Data.Word

import Data.Typeable

data CP737 = CP737
  deriving (Show,Eq,Typeable)

decoding_array_CP737 = StaticArray (0) (255) "\0\0\0\0\1\0\0\0\2\0\0\0\3\0\0\0\4\0\0\0\5\0\0\0\6\0\0\0\7\0\0\0\8\0\0\0\9\0\0\0\10\0\0\0\11\0\0\0\12\0\0\0\13\0\0\0\14\0\0\0\15\0\0\0\16\0\0\0\17\0\0\0\18\0\0\0\19\0\0\0\20\0\0\0\21\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\25\0\0\0\26\0\0\0\27\0\0\0\28\0\0\0\29\0\0\0\30\0\0\0\31\0\0\0\32\0\0\0\33\0\0\0\34\0\0\0\35\0\0\0\36\0\0\0\37\0\0\0\38\0\0\0\39\0\0\0\40\0\0\0\41\0\0\0\42\0\0\0\43\0\0\0\44\0\0\0\45\0\0\0\46\0\0\0\47\0\0\0\48\0\0\0\49\0\0\0\50\0\0\0\51\0\0\0\52\0\0\0\53\0\0\0\54\0\0\0\55\0\0\0\56\0\0\0\57\0\0\0\58\0\0\0\59\0\0\0\60\0\0\0\61\0\0\0\62\0\0\0\63\0\0\0\64\0\0\0\65\0\0\0\66\0\0\0\67\0\0\0\68\0\0\0\69\0\0\0\70\0\0\0\71\0\0\0\72\0\0\0\73\0\0\0\74\0\0\0\75\0\0\0\76\0\0\0\77\0\0\0\78\0\0\0\79\0\0\0\80\0\0\0\81\0\0\0\82\0\0\0\83\0\0\0\84\0\0\0\85\0\0\0\86\0\0\0\87\0\0\0\88\0\0\0\89\0\0\0\90\0\0\0\91\0\0\0\92\0\0\0\93\0\0\0\94\0\0\0\95\0\0\0\96\0\0\0\97\0\0\0\98\0\0\0\99\0\0\0\100\0\0\0\101\0\0\0\102\0\0\0\103\0\0\0\104\0\0\0\105\0\0\0\106\0\0\0\107\0\0\0\108\0\0\0\109\0\0\0\110\0\0\0\111\0\0\0\112\0\0\0\113\0\0\0\114\0\0\0\115\0\0\0\116\0\0\0\117\0\0\0\118\0\0\0\119\0\0\0\120\0\0\0\121\0\0\0\122\0\0\0\123\0\0\0\124\0\0\0\125\0\0\0\126\0\0\0\127\0\0\0\145\3\0\0\146\3\0\0\147\3\0\0\148\3\0\0\149\3\0\0\150\3\0\0\151\3\0\0\152\3\0\0\153\3\0\0\154\3\0\0\155\3\0\0\156\3\0\0\157\3\0\0\158\3\0\0\159\3\0\0\160\3\0\0\161\3\0\0\163\3\0\0\164\3\0\0\165\3\0\0\166\3\0\0\167\3\0\0\168\3\0\0\169\3\0\0\177\3\0\0\178\3\0\0\179\3\0\0\180\3\0\0\181\3\0\0\182\3\0\0\183\3\0\0\184\3\0\0\185\3\0\0\186\3\0\0\187\3\0\0\188\3\0\0\189\3\0\0\190\3\0\0\191\3\0\0\192\3\0\0\193\3\0\0\195\3\0\0\194\3\0\0\196\3\0\0\197\3\0\0\198\3\0\0\199\3\0\0\200\3\0\0\145\37\0\0\146\37\0\0\147\37\0\0\2\37\0\0\36\37\0\0\97\37\0\0\98\37\0\0\86\37\0\0\85\37\0\0\99\37\0\0\81\37\0\0\87\37\0\0\93\37\0\0\92\37\0\0\91\37\0\0\16\37\0\0\20\37\0\0\52\37\0\0\44\37\0\0\28\37\0\0\0\37\0\0\60\37\0\0\94\37\0\0\95\37\0\0\90\37\0\0\84\37\0\0\105\37\0\0\102\37\0\0\96\37\0\0\80\37\0\0\108\37\0\0\103\37\0\0\104\37\0\0\100\37\0\0\101\37\0\0\89\37\0\0\88\37\0\0\82\37\0\0\83\37\0\0\107\37\0\0\106\37\0\0\24\37\0\0\12\37\0\0\136\37\0\0\132\37\0\0\140\37\0\0\144\37\0\0\128\37\0\0\201\3\0\0\172\3\0\0\173\3\0\0\174\3\0\0\202\3\0\0\175\3\0\0\204\3\0\0\205\3\0\0\203\3\0\0\206\3\0\0\134\3\0\0\136\3\0\0\137\3\0\0\138\3\0\0\140\3\0\0\142\3\0\0\143\3\0\0\177\0\0\0\101\34\0\0\100\34\0\0\170\3\0\0\171\3\0\0\247\0\0\0\72\34\0\0\176\0\0\0\25\34\0\0\183\0\0\0\26\34\0\0\127\32\0\0\178\0\0\0\160\37\0\0\160\0\0\0"#

encoding_map_CP737 :: CharMap
encoding_map_CP737 = LeafMap1 (StaticMap (StaticArray (1) (256) "\160\0\0\0\64\0\0\0\198\3\0\0\32\0\0\0\96\0\0\0\165\3\0\0\86\37\0\0\16\0\0\0\48\0\0\0\80\0\0\0\112\0\0\0\148\3\0\0\182\3\0\0\2\37\0\0\102\37\0\0\8\0\0\0\24\0\0\0\40\0\0\0\56\0\0\0\72\0\0\0\88\0\0\0\104\0\0\0\120\0\0\0\137\3\0\0\156\3\0\0\173\3\0\0\190\3\0\0\206\3\0\0\52\37\0\0\94\37\0\0\132\37\0\0\4\0\0\0\12\0\0\0\20\0\0\0\28\0\0\0\36\0\0\0\44\0\0\0\52\0\0\0\60\0\0\0\68\0\0\0\76\0\0\0\84\0\0\0\92\0\0\0\100\0\0\0\108\0\0\0\116\0\0\0\124\0\0\0\183\0\0\0\143\3\0\0\152\3\0\0\160\3\0\0\169\3\0\0\178\3\0\0\186\3\0\0\194\3\0\0\202\3\0\0\72\34\0\0\24\37\0\0\82\37\0\0\90\37\0\0\98\37\0\0\106\37\0\0\145\37\0\0\2\0\0\0\6\0\0\0\10\0\0\0\14\0\0\0\18\0\0\0\22\0\0\0\26\0\0\0\30\0\0\0\34\0\0\0\38\0\0\0\42\0\0\0\46\0\0\0\50\0\0\0\54\0\0\0\58\0\0\0\62\0\0\0\66\0\0\0\70\0\0\0\74\0\0\0\78\0\0\0\82\0\0\0\86\0\0\0\90\0\0\0\94\0\0\0\98\0\0\0\102\0\0\0\106\0\0\0\110\0\0\0\114\0\0\0\118\0\0\0\122\0\0\0\126\0\0\0\177\0\0\0\134\3\0\0\140\3\0\0\146\3\0\0\150\3\0\0\154\3\0\0\158\3\0\0\163\3\0\0\167\3\0\0\171\3\0\0\175\3\0\0\180\3\0\0\184\3\0\0\188\3\0\0\192\3\0\0\196\3\0\0\200\3\0\0\204\3\0\0\25\34\0\0\101\34\0\0\16\37\0\0\36\37\0\0\80\37\0\0\84\37\0\0\88\37\0\0\92\37\0\0\96\37\0\0\100\37\0\0\104\37\0\0\108\37\0\0\140\37\0\0\147\37\0\0\1\0\0\0\3\0\0\0\5\0\0\0\7\0\0\0\9\0\0\0\11\0\0\0\13\0\0\0\15\0\0\0\17\0\0\0\19\0\0\0\21\0\0\0\23\0\0\0\25\0\0\0\27\0\0\0\29\0\0\0\31\0\0\0\33\0\0\0\35\0\0\0\37\0\0\0\39\0\0\0\41\0\0\0\43\0\0\0\45\0\0\0\47\0\0\0\49\0\0\0\51\0\0\0\53\0\0\0\55\0\0\0\57\0\0\0\59\0\0\0\61\0\0\0\63\0\0\0\65\0\0\0\67\0\0\0\69\0\0\0\71\0\0\0\73\0\0\0\75\0\0\0\77\0\0\0\79\0\0\0\81\0\0\0\83\0\0\0\85\0\0\0\87\0\0\0\89\0\0\0\91\0\0\0\93\0\0\0\95\0\0\0\97\0\0\0\99\0\0\0\101\0\0\0\103\0\0\0\105\0\0\0\107\0\0\0\109\0\0\0\111\0\0\0\113\0\0\0\115\0\0\0\117\0\0\0\119\0\0\0\121\0\0\0\123\0\0\0\125\0\0\0\127\0\0\0\176\0\0\0\178\0\0\0\247\0\0\0\136\3\0\0\138\3\0\0\142\3\0\0\145\3\0\0\147\3\0\0\149\3\0\0\151\3\0\0\153\3\0\0\155\3\0\0\157\3\0\0\159\3\0\0\161\3\0\0\164\3\0\0\166\3\0\0\168\3\0\0\170\3\0\0\172\3\0\0\174\3\0\0\177\3\0\0\179\3\0\0\181\3\0\0\183\3\0\0\185\3\0\0\187\3\0\0\189\3\0\0\191\3\0\0\193\3\0\0\195\3\0\0\197\3\0\0\199\3\0\0\201\3\0\0\203\3\0\0\205\3\0\0\127\32\0\0\26\34\0\0\100\34\0\0\0\37\0\0\12\37\0\0\20\37\0\0\28\37\0\0\44\37\0\0\60\37\0\0\81\37\0\0\83\37\0\0\85\37\0\0\87\37\0\0\89\37\0\0\91\37\0\0\93\37\0\0\95\37\0\0\97\37\0\0\99\37\0\0\101\37\0\0\103\37\0\0\105\37\0\0\107\37\0\0\128\37\0\0\136\37\0\0\144\37\0\0\146\37\0\0\160\37\0\0\0\0\0\0"#) (StaticArray (1) (256) "\255\64\173\32\96\147\183\16\48\80\112\131\157\179\203\8\24\40\56\72\88\104\120\236\139\226\165\233\193\198\220\4\12\20\28\36\44\52\60\68\76\84\92\100\108\116\124\250\240\135\143\151\153\161\170\228\247\217\213\200\182\216\176\2\6\10\14\18\22\26\30\34\38\42\46\50\54\58\62\66\70\74\78\82\86\90\94\98\102\106\110\114\118\122\126\241\234\238\129\133\137\141\145\149\245\229\155\159\163\167\171\175\230\249\242\191\180\205\201\212\189\204\209\208\206\221\178\1\3\5\7\9\11\13\15\17\19\21\23\25\27\29\31\33\35\37\39\41\43\45\47\49\51\53\55\57\59\61\63\65\67\69\71\73\75\77\79\81\83\85\87\89\91\93\95\97\99\101\103\105\107\109\111\113\115\117\119\121\123\125\127\248\253\246\235\237\239\128\130\132\134\136\138\140\142\144\146\148\150\244\225\227\152\154\156\158\160\162\164\166\168\169\172\174\224\232\231\252\251\243\196\218\192\195\194\197\186\214\184\187\211\190\188\199\181\185\210\207\202\215\223\219\222\177\254\0"#))

instance Encoding CP737 where
  decodeChar _ = do
    w <- fetchWord8
    return ()
    case decoding_array_CP737!w of
      Nothing -> throwException $ IllegalCharacter $ fromIntegral w
      Just c -> return c
  encodeChar _ c = mapEncode c encoding_map_CP737
  encodeable _ c = mapMember c encoding_map_CP737
