{- This file has been auto-generated. Do not edit it. -}
{-# LANGUAGE MagicHash,DeriveDataTypeable #-}
{- |

0	 = &#0; (0)

1	 = &#1; (1)

2	 = &#2; (2)

3	 = &#3; (3)

4	 = &#4; (4)

5	 = &#5; (5)

6	 = &#6; (6)

7	 = &#7; (7)

8	 = &#8; (8)

9	 = &#9; (9)

10	 = &#10; (10)

11	 = &#11; (11)

12	 = &#12; (12)

13	 = &#13; (13)

14	 = &#14; (14)

15	 = &#15; (15)

16	 = &#16; (16)

17	 = &#17; (17)

18	 = &#18; (18)

19	 = &#19; (19)

20	 = &#20; (20)

21	 = &#21; (21)

22	 = &#22; (22)

23	 = &#23; (23)

24	 = &#24; (24)

25	 = &#25; (25)

26	 = &#26; (26)

27	 = &#27; (27)

28	 = &#28; (28)

29	 = &#29; (29)

30	 = &#30; (30)

31	 = &#31; (31)

32	 = &#32; (32)

33	 = &#33; (33)

34	 = &#34; (34)

35	 = &#35; (35)

36	 = &#36; (36)

37	 = &#37; (37)

38	 = &#38; (38)

39	 = &#39; (39)

40	 = &#40; (40)

41	 = &#41; (41)

42	 = &#42; (42)

43	 = &#43; (43)

44	 = &#44; (44)

45	 = &#45; (45)

46	 = &#46; (46)

47	 = &#47; (47)

48	 = &#48; (48)

49	 = &#49; (49)

50	 = &#50; (50)

51	 = &#51; (51)

52	 = &#52; (52)

53	 = &#53; (53)

54	 = &#54; (54)

55	 = &#55; (55)

56	 = &#56; (56)

57	 = &#57; (57)

58	 = &#58; (58)

59	 = &#59; (59)

60	 = &#60; (60)

61	 = &#61; (61)

62	 = &#62; (62)

63	 = &#63; (63)

64	 = &#64; (64)

65	 = &#65; (65)

66	 = &#66; (66)

67	 = &#67; (67)

68	 = &#68; (68)

69	 = &#69; (69)

70	 = &#70; (70)

71	 = &#71; (71)

72	 = &#72; (72)

73	 = &#73; (73)

74	 = &#74; (74)

75	 = &#75; (75)

76	 = &#76; (76)

77	 = &#77; (77)

78	 = &#78; (78)

79	 = &#79; (79)

80	 = &#80; (80)

81	 = &#81; (81)

82	 = &#82; (82)

83	 = &#83; (83)

84	 = &#84; (84)

85	 = &#85; (85)

86	 = &#86; (86)

87	 = &#87; (87)

88	 = &#88; (88)

89	 = &#89; (89)

90	 = &#90; (90)

91	 = &#91; (91)

92	 = &#92; (92)

93	 = &#93; (93)

94	 = &#94; (94)

95	 = &#95; (95)

96	 = &#96; (96)

97	 = &#97; (97)

98	 = &#98; (98)

99	 = &#99; (99)

100	 = &#100; (100)

101	 = &#101; (101)

102	 = &#102; (102)

103	 = &#103; (103)

104	 = &#104; (104)

105	 = &#105; (105)

106	 = &#106; (106)

107	 = &#107; (107)

108	 = &#108; (108)

109	 = &#109; (109)

110	 = &#110; (110)

111	 = &#111; (111)

112	 = &#112; (112)

113	 = &#113; (113)

114	 = &#114; (114)

115	 = &#115; (115)

116	 = &#116; (116)

117	 = &#117; (117)

118	 = &#118; (118)

119	 = &#119; (119)

120	 = &#120; (120)

121	 = &#121; (121)

122	 = &#122; (122)

123	 = &#123; (123)

124	 = &#124; (124)

125	 = &#125; (125)

126	 = &#126; (126)

127	 = &#127; (127)

128	 = &#8364; (8364)

129

130	 = &#8218; (8218)

131	 = &#402; (402)

132	 = &#8222; (8222)

133	 = &#8230; (8230)

134	 = &#8224; (8224)

135	 = &#8225; (8225)

136	 = &#710; (710)

137	 = &#8240; (8240)

138	 = &#352; (352)

139	 = &#8249; (8249)

140	 = &#338; (338)

141

142	 = &#381; (381)

143

144

145	 = &#8216; (8216)

146	 = &#8217; (8217)

147	 = &#8220; (8220)

148	 = &#8221; (8221)

149	 = &#8226; (8226)

150	 = &#8211; (8211)

151	 = &#8212; (8212)

152	 = &#732; (732)

153	 = &#8482; (8482)

154	 = &#353; (353)

155	 = &#8250; (8250)

156	 = &#339; (339)

157

158	 = &#382; (382)

159	 = &#376; (376)

160	 = &#160; (160)

161	 = &#161; (161)

162	 = &#162; (162)

163	 = &#163; (163)

164	 = &#164; (164)

165	 = &#165; (165)

166	 = &#166; (166)

167	 = &#167; (167)

168	 = &#168; (168)

169	 = &#169; (169)

170	 = &#170; (170)

171	 = &#171; (171)

172	 = &#172; (172)

173	 = &#173; (173)

174	 = &#174; (174)

175	 = &#175; (175)

176	 = &#176; (176)

177	 = &#177; (177)

178	 = &#178; (178)

179	 = &#179; (179)

180	 = &#180; (180)

181	 = &#181; (181)

182	 = &#182; (182)

183	 = &#183; (183)

184	 = &#184; (184)

185	 = &#185; (185)

186	 = &#186; (186)

187	 = &#187; (187)

188	 = &#188; (188)

189	 = &#189; (189)

190	 = &#190; (190)

191	 = &#191; (191)

192	 = &#192; (192)

193	 = &#193; (193)

194	 = &#194; (194)

195	 = &#195; (195)

196	 = &#196; (196)

197	 = &#197; (197)

198	 = &#198; (198)

199	 = &#199; (199)

200	 = &#200; (200)

201	 = &#201; (201)

202	 = &#202; (202)

203	 = &#203; (203)

204	 = &#204; (204)

205	 = &#205; (205)

206	 = &#206; (206)

207	 = &#207; (207)

208	 = &#208; (208)

209	 = &#209; (209)

210	 = &#210; (210)

211	 = &#211; (211)

212	 = &#212; (212)

213	 = &#213; (213)

214	 = &#214; (214)

215	 = &#215; (215)

216	 = &#216; (216)

217	 = &#217; (217)

218	 = &#218; (218)

219	 = &#219; (219)

220	 = &#220; (220)

221	 = &#221; (221)

222	 = &#222; (222)

223	 = &#223; (223)

224	 = &#224; (224)

225	 = &#225; (225)

226	 = &#226; (226)

227	 = &#227; (227)

228	 = &#228; (228)

229	 = &#229; (229)

230	 = &#230; (230)

231	 = &#231; (231)

232	 = &#232; (232)

233	 = &#233; (233)

234	 = &#234; (234)

235	 = &#235; (235)

236	 = &#236; (236)

237	 = &#237; (237)

238	 = &#238; (238)

239	 = &#239; (239)

240	 = &#240; (240)

241	 = &#241; (241)

242	 = &#242; (242)

243	 = &#243; (243)

244	 = &#244; (244)

245	 = &#245; (245)

246	 = &#246; (246)

247	 = &#247; (247)

248	 = &#248; (248)

249	 = &#249; (249)

250	 = &#250; (250)

251	 = &#251; (251)

252	 = &#252; (252)

253	 = &#253; (253)

254	 = &#254; (254)

255	 = &#255; (255)
 -}
module Data.Encoding.CP1252(CP1252(..)) where

import Data.Encoding.Base
import Data.Encoding.ByteSource
import Data.Encoding.ByteSink
import Data.Encoding.Exception
import Data.CharMap
import Data.Array.Static
import Data.Map.Static
import Control.Throws
import Prelude hiding (lookup)
import Data.Word

import Data.Typeable

data CP1252 = CP1252
  deriving (Show,Eq,Typeable)

decoding_array_CP1252 = StaticArray (0) (255) "\0\0\0\0\1\0\0\0\2\0\0\0\3\0\0\0\4\0\0\0\5\0\0\0\6\0\0\0\7\0\0\0\8\0\0\0\9\0\0\0\10\0\0\0\11\0\0\0\12\0\0\0\13\0\0\0\14\0\0\0\15\0\0\0\16\0\0\0\17\0\0\0\18\0\0\0\19\0\0\0\20\0\0\0\21\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\25\0\0\0\26\0\0\0\27\0\0\0\28\0\0\0\29\0\0\0\30\0\0\0\31\0\0\0\32\0\0\0\33\0\0\0\34\0\0\0\35\0\0\0\36\0\0\0\37\0\0\0\38\0\0\0\39\0\0\0\40\0\0\0\41\0\0\0\42\0\0\0\43\0\0\0\44\0\0\0\45\0\0\0\46\0\0\0\47\0\0\0\48\0\0\0\49\0\0\0\50\0\0\0\51\0\0\0\52\0\0\0\53\0\0\0\54\0\0\0\55\0\0\0\56\0\0\0\57\0\0\0\58\0\0\0\59\0\0\0\60\0\0\0\61\0\0\0\62\0\0\0\63\0\0\0\64\0\0\0\65\0\0\0\66\0\0\0\67\0\0\0\68\0\0\0\69\0\0\0\70\0\0\0\71\0\0\0\72\0\0\0\73\0\0\0\74\0\0\0\75\0\0\0\76\0\0\0\77\0\0\0\78\0\0\0\79\0\0\0\80\0\0\0\81\0\0\0\82\0\0\0\83\0\0\0\84\0\0\0\85\0\0\0\86\0\0\0\87\0\0\0\88\0\0\0\89\0\0\0\90\0\0\0\91\0\0\0\92\0\0\0\93\0\0\0\94\0\0\0\95\0\0\0\96\0\0\0\97\0\0\0\98\0\0\0\99\0\0\0\100\0\0\0\101\0\0\0\102\0\0\0\103\0\0\0\104\0\0\0\105\0\0\0\106\0\0\0\107\0\0\0\108\0\0\0\109\0\0\0\110\0\0\0\111\0\0\0\112\0\0\0\113\0\0\0\114\0\0\0\115\0\0\0\116\0\0\0\117\0\0\0\118\0\0\0\119\0\0\0\120\0\0\0\121\0\0\0\122\0\0\0\123\0\0\0\124\0\0\0\125\0\0\0\126\0\0\0\127\0\0\0\172\32\0\0\255\255\255\255\26\32\0\0\146\1\0\0\30\32\0\0\38\32\0\0\32\32\0\0\33\32\0\0\198\2\0\0\48\32\0\0\96\1\0\0\57\32\0\0\82\1\0\0\255\255\255\255\125\1\0\0\255\255\255\255\255\255\255\255\24\32\0\0\25\32\0\0\28\32\0\0\29\32\0\0\34\32\0\0\19\32\0\0\20\32\0\0\220\2\0\0\34\33\0\0\97\1\0\0\58\32\0\0\83\1\0\0\255\255\255\255\126\1\0\0\120\1\0\0\160\0\0\0\161\0\0\0\162\0\0\0\163\0\0\0\164\0\0\0\165\0\0\0\166\0\0\0\167\0\0\0\168\0\0\0\169\0\0\0\170\0\0\0\171\0\0\0\172\0\0\0\173\0\0\0\174\0\0\0\175\0\0\0\176\0\0\0\177\0\0\0\178\0\0\0\179\0\0\0\180\0\0\0\181\0\0\0\182\0\0\0\183\0\0\0\184\0\0\0\185\0\0\0\186\0\0\0\187\0\0\0\188\0\0\0\189\0\0\0\190\0\0\0\191\0\0\0\192\0\0\0\193\0\0\0\194\0\0\0\195\0\0\0\196\0\0\0\197\0\0\0\198\0\0\0\199\0\0\0\200\0\0\0\201\0\0\0\202\0\0\0\203\0\0\0\204\0\0\0\205\0\0\0\206\0\0\0\207\0\0\0\208\0\0\0\209\0\0\0\210\0\0\0\211\0\0\0\212\0\0\0\213\0\0\0\214\0\0\0\215\0\0\0\216\0\0\0\217\0\0\0\218\0\0\0\219\0\0\0\220\0\0\0\221\0\0\0\222\0\0\0\223\0\0\0\224\0\0\0\225\0\0\0\226\0\0\0\227\0\0\0\228\0\0\0\229\0\0\0\230\0\0\0\231\0\0\0\232\0\0\0\233\0\0\0\234\0\0\0\235\0\0\0\236\0\0\0\237\0\0\0\238\0\0\0\239\0\0\0\240\0\0\0\241\0\0\0\242\0\0\0\243\0\0\0\244\0\0\0\245\0\0\0\246\0\0\0\247\0\0\0\248\0\0\0\249\0\0\0\250\0\0\0\251\0\0\0\252\0\0\0\253\0\0\0\254\0\0\0\255\0\0\0"#

encoding_map_CP1252 :: CharMap
encoding_map_CP1252 = LeafMap1 (StaticMap (StaticArray (1) (251) "\127\0\0\0\63\0\0\0\223\0\0\0\31\0\0\0\95\0\0\0\191\0\0\0\255\0\0\0\15\0\0\0\47\0\0\0\79\0\0\0\111\0\0\0\175\0\0\0\207\0\0\0\239\0\0\0\28\32\0\0\7\0\0\0\23\0\0\0\39\0\0\0\55\0\0\0\71\0\0\0\87\0\0\0\103\0\0\0\119\0\0\0\167\0\0\0\183\0\0\0\199\0\0\0\215\0\0\0\231\0\0\0\247\0\0\0\146\1\0\0\57\32\0\0\3\0\0\0\11\0\0\0\19\0\0\0\27\0\0\0\35\0\0\0\43\0\0\0\51\0\0\0\59\0\0\0\67\0\0\0\75\0\0\0\83\0\0\0\91\0\0\0\99\0\0\0\107\0\0\0\115\0\0\0\123\0\0\0\163\0\0\0\171\0\0\0\179\0\0\0\187\0\0\0\195\0\0\0\203\0\0\0\211\0\0\0\219\0\0\0\227\0\0\0\235\0\0\0\243\0\0\0\251\0\0\0\97\1\0\0\20\32\0\0\33\32\0\0\172\32\0\0\1\0\0\0\5\0\0\0\9\0\0\0\13\0\0\0\17\0\0\0\21\0\0\0\25\0\0\0\29\0\0\0\33\0\0\0\37\0\0\0\41\0\0\0\45\0\0\0\49\0\0\0\53\0\0\0\57\0\0\0\61\0\0\0\65\0\0\0\69\0\0\0\73\0\0\0\77\0\0\0\81\0\0\0\85\0\0\0\89\0\0\0\93\0\0\0\97\0\0\0\101\0\0\0\105\0\0\0\109\0\0\0\113\0\0\0\117\0\0\0\121\0\0\0\125\0\0\0\161\0\0\0\165\0\0\0\169\0\0\0\173\0\0\0\177\0\0\0\181\0\0\0\185\0\0\0\189\0\0\0\193\0\0\0\197\0\0\0\201\0\0\0\205\0\0\0\209\0\0\0\213\0\0\0\217\0\0\0\221\0\0\0\225\0\0\0\229\0\0\0\233\0\0\0\237\0\0\0\241\0\0\0\245\0\0\0\249\0\0\0\253\0\0\0\83\1\0\0\125\1\0\0\220\2\0\0\25\32\0\0\30\32\0\0\38\32\0\0\58\32\0\0\34\33\0\0\0\0\0\0\2\0\0\0\4\0\0\0\6\0\0\0\8\0\0\0\10\0\0\0\12\0\0\0\14\0\0\0\16\0\0\0\18\0\0\0\20\0\0\0\22\0\0\0\24\0\0\0\26\0\0\0\28\0\0\0\30\0\0\0\32\0\0\0\34\0\0\0\36\0\0\0\38\0\0\0\40\0\0\0\42\0\0\0\44\0\0\0\46\0\0\0\48\0\0\0\50\0\0\0\52\0\0\0\54\0\0\0\56\0\0\0\58\0\0\0\60\0\0\0\62\0\0\0\64\0\0\0\66\0\0\0\68\0\0\0\70\0\0\0\72\0\0\0\74\0\0\0\76\0\0\0\78\0\0\0\80\0\0\0\82\0\0\0\84\0\0\0\86\0\0\0\88\0\0\0\90\0\0\0\92\0\0\0\94\0\0\0\96\0\0\0\98\0\0\0\100\0\0\0\102\0\0\0\104\0\0\0\106\0\0\0\108\0\0\0\110\0\0\0\112\0\0\0\114\0\0\0\116\0\0\0\118\0\0\0\120\0\0\0\122\0\0\0\124\0\0\0\126\0\0\0\160\0\0\0\162\0\0\0\164\0\0\0\166\0\0\0\168\0\0\0\170\0\0\0\172\0\0\0\174\0\0\0\176\0\0\0\178\0\0\0\180\0\0\0\182\0\0\0\184\0\0\0\186\0\0\0\188\0\0\0\190\0\0\0\192\0\0\0\194\0\0\0\196\0\0\0\198\0\0\0\200\0\0\0\202\0\0\0\204\0\0\0\206\0\0\0\208\0\0\0\210\0\0\0\212\0\0\0\214\0\0\0\216\0\0\0\218\0\0\0\220\0\0\0\222\0\0\0\224\0\0\0\226\0\0\0\228\0\0\0\230\0\0\0\232\0\0\0\234\0\0\0\236\0\0\0\238\0\0\0\240\0\0\0\242\0\0\0\244\0\0\0\246\0\0\0\248\0\0\0\250\0\0\0\252\0\0\0\254\0\0\0\82\1\0\0\96\1\0\0\120\1\0\0\126\1\0\0\198\2\0\0\19\32\0\0\24\32\0\0\26\32\0\0\29\32\0\0\32\32\0\0\34\32\0\0\48\32\0\0"#) (StaticArray (1) (251) "\127\63\223\31\95\191\255\15\47\79\111\175\207\239\147\7\23\39\55\71\87\103\119\167\183\199\215\231\247\131\139\3\11\19\27\35\43\51\59\67\75\83\91\99\107\115\123\163\171\179\187\195\203\211\219\227\235\243\251\154\151\135\128\1\5\9\13\17\21\25\29\33\37\41\45\49\53\57\61\65\69\73\77\81\85\89\93\97\101\105\109\113\117\121\125\161\165\169\173\177\181\185\189\193\197\201\205\209\213\217\221\225\229\233\237\241\245\249\253\156\142\152\146\132\133\155\153\0\2\4\6\8\10\12\14\16\18\20\22\24\26\28\30\32\34\36\38\40\42\44\46\48\50\52\54\56\58\60\62\64\66\68\70\72\74\76\78\80\82\84\86\88\90\92\94\96\98\100\102\104\106\108\110\112\114\116\118\120\122\124\126\160\162\164\166\168\170\172\174\176\178\180\182\184\186\188\190\192\194\196\198\200\202\204\206\208\210\212\214\216\218\220\222\224\226\228\230\232\234\236\238\240\242\244\246\248\250\252\254\140\138\159\158\136\150\145\130\148\134\149\137"#))

instance Encoding CP1252 where
  decodeChar _ = do
    w <- fetchWord8
    return ()
    case decoding_array_CP1252!w of
      Nothing -> throwException $ IllegalCharacter $ fromIntegral w
      Just c -> return c
  encodeChar _ c = mapEncode c encoding_map_CP1252
  encodeable _ c = mapMember c encoding_map_CP1252
